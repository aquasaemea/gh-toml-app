[versions]
androidCacheFix = "3.0"
androidBuildGradle = "8.2.1"
androidNdk = "25.1.8937393"
androidTools = "31.2.1"
appUpdate = "2.1.0"
assertJ = "3.24.2"
buildTools = "34.0.0"
byteBuddy = "1.14.4"
cucumber = "7.11.2"
dagger = "2.45"
detekt = "1.23.1"
dexmaker = "2.28.3"
dokka = "1.8.20"
downloaderPlugin = "5.1.0"
facebookScreenshot = "0.14.0"
githubApi = "1.314"
gson = "2.10.1"
jacoco = "0.8.8"
javassist = "3.29.2-GA"
jiraClient = "5.2.4"
json = "20230227"
junit = "4.13.2"
junit5 = "5.9.2"
junitParams = "1.1.1"
kotlin = { strictly = "1.8.22" }
kotlinLogging = "3.0.5"
kotlinPoet = "1.12.0"
kotlinCompileTesting = "1.5.0"
kotlinxCoroutines = { strictly = "1.7.3" }
kotlinxDateTime = "0.4.0"
kotlinxHtmlJvm = "0.8.0"
kotlinxSerialization = "1.5.0"
ksp = "1.8.22-1.0.11"
ktlint = "0.50.0"
ktlintGradlePlugin = "11.5.1"
ktor = "2.3.10"
leakCanary = "2.12"
lint = "31.0.2"
logback = "1.4.5"
logbackAndroid = "3.0.0"
markdownToPdf = "1.1.0"
mockk = "1.13.3"
moshi = "1.14.0"
okHttp = "4.12.0"
redacted = "1.4.0"
robolectric = "4.9.2"
sentry = "6.32.0"
sentryGradle = "3.14.0"
slf4jApi = "2.0.12"
sonarqube = "4.4.1.3373"
sqlDelight="2.0.2"
suncalc="3.7"
threeTenAndroidBackport = "1.4.4"
turbine = "1.0.0"
xmlUnit = "2.9.1"
asciidoctor = "3.3.2"

[libraries]
androidGradlePlugin = { module = "com.android.tools.build:gradle", version.ref = "androidBuildGradle" }

androidToolCommon = { module = "com.android.tools:common", version.ref = "androidTools" }

appUpdate = { module = "com.google.android.play:app-update", version.ref = "appUpdate" }
appUpdateKtx = { module = "com.google.android.play:app-update-ktx", version.ref = "appUpdate" }

assertJCore = { module = "org.assertj:assertj-core", version.ref = "assertJ" }

byteBuddyAgent = { module = "net.bytebuddy:byte-buddy-agent", version.ref = "byteBuddy" }

builderTestApi = {module = "com.android.tools.build:builder-test-api", version.ref = "androidBuildGradle"}

cucumber = { module = "io.cucumber:cucumber-java8", version.ref = "cucumber" }

dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerAndroid = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
daggerAndroidProcessor = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }
daggerAndroidSupport = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

databindingCompiler = { module = "androidx.databinding:databinding-compiler", version.ref = "androidBuildGradle" }

dataBindingRuntime = { module = "androidx.databinding:databinding-runtime", version.ref = "androidBuildGradle" }

ddmslib = { module = "com.android.tools.ddms:ddmlib", version.ref = "androidTools"}

detektGradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
detektFormatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }

dexmaker = { module = "com.linkedin.dexmaker:dexmaker", version.ref = "dexmaker" }

dokkaBase = { module = "org.jetbrains.dokka:dokka-base", version.ref = "dokka" }
dokkaGradlePlugin = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "dokka" }

downloadGradlePlugin = { module = "de.undercouch.download:de.undercouch.download.gradle.plugin", version.ref = "downloaderPlugin" }

githubApi = { module = "org.kohsuke:github-api", version.ref = "githubApi" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }

jacocoCore = { module = "org.jacoco:org.jacoco.core", version.ref = "jacoco" }

javassist = { module = "org.javassist:javassist", version.ref = "javassist" }

javaxInject = "javax.inject:javax.inject:1"

jiraClientApp = { module = "com.atlassian.jira:jira-rest-java-client-app", version.ref = "jiraClient" }

json = { module = "org.json:json", version.ref = "json" }

junit = { module = "junit:junit", version.ref = "junit" }
junitParams = { module = "pl.pragmatists:JUnitParams", version.ref = "junitParams" }
junitVintageEngine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit5" }

kotlin = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinBom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinLogging = { module = "io.github.microutils:kotlin-logging", version.ref = "kotlinLogging" }
kotlinPoet = { module = "com.squareup:kotlinpoet", version.ref = "kotlinPoet" }
kotlinPoetKsp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinPoet" }
kotlinStdlibJdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinCompileTesting = { module = "com.github.tschuchortdev:kotlin-compile-testing", version.ref = "kotlinCompileTesting" }
kotlinCompileTestingKsp = { module = "com.github.tschuchortdev:kotlin-compile-testing-ksp", version.ref = "kotlinCompileTesting" }
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinxCoroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinxCoroutines" }
kotlinxCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotlinxDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDateTime" }
kotlinxHtmlJvm = { module = "org.jetbrains.kotlinx:kotlinx-html-jvm", version.ref = "kotlinxHtmlJvm" }
kotlinxSerializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerialization" }

kspSymbolProcessingApi = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kspSymbolProcessingGradlePlugin = { module = "com.google.devtools.ksp:symbol-processing-gradle-plugin", version.ref = "ksp" }

ktlintGradlePlugin = { module = "org.jlleitschuh.gradle:ktlint-gradle", version.ref = "ktlintGradlePlugin" }

ktorClientCio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktorClientContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktorServerCio = { module = "io.ktor:ktor-server-cio", version.ref = "ktor" }
ktorServerContentNegotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktorServerDoubleReceive = { module = "io.ktor:ktor-server-double-receive", version.ref = "ktor" }
ktorServerStatusPages = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }

leakCanaryAndroid = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }
leakCanaryAndroidInstrumentation = { module = "com.squareup.leakcanary:leakcanary-android-instrumentation", version.ref = "leakCanary"}

lintApi = { module = "com.android.tools.lint:lint-api", version.ref = "lint" }
lintChecks = { module = "com.android.tools.lint:lint-checks", version.ref = "lint" }
lintTests = { module = "com.android.tools.lint:lint-tests", version.ref = "lint" }

logbackClassic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logbackAndroid = { module = "com.github.tony19:logback-android", version.ref = "logbackAndroid" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockkCore = { module = "io.mockk:mockk-core", version.ref = "mockk" }
mockkAndroid = { module = "io.mockk:mockk-android", version.ref = "mockk" }

moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshiAdapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshiKotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshiKotlinCodegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okHttp" }
okHttpMockServer = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okHttp" }

redactedCompilerPlugin = { module = "dev.zacsweers.redacted:redacted-compiler-plugin-gradle", version.ref = "redacted" }

robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }

sentryAndroid = { module = "io.sentry:sentry-android", version.ref = "sentry" }
sentryAndroidFragment = { module = "io.sentry:sentry-android-fragment", version.ref = "sentry" }

sonarqubeGradlePlugin = { module = "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin", version.ref = "sonarqube"}

slf4jApi = { module = "org.slf4j:slf4j-api", version.ref = "slf4jApi" }
sqlDelightKtx = { module = "app.cash.sqldelight:coroutines-extensions-jvm", version.ref = "sqlDelight" }
sqlDelightAndroidDriver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelightJdbcDriver = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqlDelight" }
sqlDelightRunTime = { module = "app.cash.sqldelight:runtime-jvm", version.ref = "sqlDelight" }

suncalc = { module = "org.shredzone.commons:commons-suncalc", version.ref = "suncalc"}

threeTenAndroidBackport = { module = "com.jakewharton.threetenabp:threetenabp", version.ref = "threeTenAndroidBackport" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }

what3words = { module = "com.tomtom.navapp.android:w3w", version = "1.0.0" }
what3wordsdata = { module = "com.tomtom.navapp.android:w3w-data", version = "1.0.0" }

xmlUnit = { module = "org.xmlunit:xmlunit-core", version.ref = "xmlUnit" }

[plugins]
gradleAndroidCacheFix = { id = "org.gradle.android.cache-fix", version.ref = "androidCacheFix" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
playPublisher = { id = "com.github.triplet.play", version = "3.8.4" }
sentry = { id = "io.sentry.android.gradle", version.ref = "sentryGradle" }
markdownToPdf = { id = "de.fntsoftware.gradle.markdown-to-pdf", version.ref = "markdownToPdf" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
asciidoctor = { id = "org.asciidoctor.jvm.convert", version.ref = "asciidoctor" }
gradleTestRetry = { id = "org.gradle.test-retry", version = "1.5.6" }
